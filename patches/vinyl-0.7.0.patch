diff --git a/Data/Vinyl/Core.hs b/Data/Vinyl/Core.hs
index 5d31570..4400785 100644
--- a/Data/Vinyl/Core.hs
+++ b/Data/Vinyl/Core.hs
@@ -15,8 +15,7 @@
 
 module Data.Vinyl.Core where
 
-import Data.Monoid hiding ((<>))
-import Data.Semigroup
+import Data.Monoid
 import Foreign.Ptr (castPtr, plusPtr)
 import Foreign.Storable (Storable(..))
 import Data.Vinyl.Functor
@@ -227,19 +226,13 @@ instance RecAll f rs Show => Show (Rec f rs) where
       . rmap (\(Compose (Dict x)) -> Const $ show x)
       $ reifyConstraint (Proxy :: Proxy Show) xs
 
-instance Semigroup (Rec f '[]) where
-  RNil <> RNil = RNil
-
-instance (Semigroup (f r), Semigroup (Rec f rs)) => Semigroup (Rec f (r ': rs)) where
-  (x :& xs) <> (y :& ys) = (x <> y) :& (xs <> ys)
-
 instance Monoid (Rec f '[]) where
   mempty = RNil
-  mappend = (<>)
+  RNil `mappend` RNil = RNil
 
-instance (Semigroup (f r), Semigroup (Rec f rs), Monoid (f r), Monoid (Rec f rs)) => Monoid (Rec f (r ': rs)) where
+instance (Monoid (f r), Monoid (Rec f rs)) => Monoid (Rec f (r ': rs)) where
   mempty = mempty :& mempty
-  mappend = (<>)
+  (x :& xs) `mappend` (y :& ys) = (x <> y) :& (xs <> ys)
 
 instance Eq (Rec f '[]) where
   _ == _ = True
